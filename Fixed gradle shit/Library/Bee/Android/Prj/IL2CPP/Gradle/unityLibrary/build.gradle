apply plugin: 'com.android.library'
apply from: '../shared/keepUnitySymbols.gradle'
apply from: '../shared/common.gradle'

// Disable lint tasks immediately when they are added
tasks.whenTaskAdded { task ->
    if (task.name.contains('lintVitalAnalyzeRelease') || 
        task.name.contains('lintVitalAnalyzeDebug') ||
        task.name.contains('AndroidLintWorkAction')) {
        task.enabled = false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation(name: 'UnityAds', ext:'aar')
    implementation(name: 'common', ext:'aar')
}

android {
    namespace "com.unity3d.player"
    ndkPath "C:/Program Files/Unity/Hub/Editor/6000.2.0f1/Editor/Data/PlaybackEngines/AndroidPlayer/NDK"
    ndkVersion "27.2.12479018"
    compileSdk 35
    buildToolsVersion = "34.0.0"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    defaultConfig {
        consumerProguardFiles "proguard-unity.txt"
        versionName "1.1.4"
        minSdk 23
        targetSdk 35
        versionCode 3

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
            debugSymbolLevel "none"
        }
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
        disable 'MissingTranslation', 'UnusedResources', 'ObsoleteLintCustomCheck', 'NewerVersionAvailable'
        ignoreTestSources true
        ignoreWarnings true
        quiet true
    }
    


    androidResources {
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~"
        noCompress = ['.unity3d', '.ress', '.resource', '.obb', '.bundle', '.unityexp'] + unityStreamingAssets.tokenize(', ')
    }

    packaging {
        jniLibs {
            useLegacyPackaging true
        }
    }
}
// Dependencies for "com.unity.purchasing". This section is automatically generated.
afterEvaluate {
    dependencies {
        implementation 'com.android.billingclient:billing:6.2.1'
    }
}
// End of dependencies for "com.unity.purchasing".

// Disable the specific lint task that causes AospIssueRegistry errors
afterEvaluate {
    tasks.matching { task ->
        task.name.contains('lintVitalAnalyzeRelease') || 
        task.name.contains('lintVitalAnalyzeDebug') ||
        task.name.contains('AndroidLintWorkAction')
    }.configureEach {
        enabled = false
    }
}

